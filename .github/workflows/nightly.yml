name: nightly

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-api:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        
      - name: Cache Shared Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('./build.gradle.kts') }}

      - name: Extract version from build.gradle.kts
        id: extract_version
        run: |
          VERSION=$(cat ./build.gradle.kts | grep '^version\s*=\s*\".*\"' | sed 's/^version\s*=\s*\"\(.*\)\"/\1/')
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Build Api
        id: gradle
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar --info --stacktrace
          echo "Build completed"

      - name: Upload application
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: app.jar
          path: ./build/libs/app.jar

      - name: Upload dockerfile
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: dockerfile
          path: ./Dockerfile    

  build-container:
    needs:
      - build-api
    runs-on: ubuntu-latest
    steps:
    
      - name: Download dockerfile
        uses: actions/download-artifact@v4.2.1
        with:
          name: dockerfile
    
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.2.1
        with:
          name: app.jar
    
      - name: Generate Docker image tag
        id: docker-tag
        run: echo "::set-output name=tag::$(date -u +'%Y.%m.%d')-$(uuidgen | cut -c 1-8)"

      - name: Docker login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            PASS_APP_VERSION=${{ needs.build-api.outputs.VERSION }}
          push: true
          tags: |
            bskjon/streamit-api:nightly
            bskjon/streamit-api:${{ github.sha }}
            bskjon/streamit-api:${{ steps.docker-tag.outputs.tag }}
